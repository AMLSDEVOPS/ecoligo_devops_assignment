# Corporate CI/CD Pipeline - Sequential stages
name: Corporate CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # STAGE 1: Code Quality & Testing
  code-quality:
    name: Code Quality & Tests
    runs-on: self-hosted
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
        
    - name: Install dependencies
      run: pip install -r requirements.txt
        
    - name: Run unit tests
      run: pytest tests/ -v --cov=app --cov-report=term-missing
        
    - name: Validate application
      run: |
        python -c "import app; from app.main import app; from app.api import api; print('✅ All imports work')"

  # STAGE 2: Build Production Image (Only on main branch)
  build-production:
    name: Build Production Image
    runs-on: self-hosted
    if: github.ref == 'refs/heads/main'
    needs: code-quality
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1
        
    - name: Login to ECR
      run: |
        aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 398803372580.dkr.ecr.ap-south-1.amazonaws.com
        
    - name: Build and push production image
      run: |
        SHORT_SHA=$(git rev-parse --short HEAD)
        docker build -t 398803372580.dkr.ecr.ap-south-1.amazonaws.com/ecoligovenkat:$SHORT_SHA .
        docker push 398803372580.dkr.ecr.ap-south-1.amazonaws.com/ecoligovenkat:$SHORT_SHA
        echo "Image pushed with tag: $SHORT_SHA"

  # STAGE 3: Deploy to Production (Only on main branch)
  deploy-production:
    name: Deploy to Production
    runs-on: self-hosted
    if: github.ref == 'refs/heads/main'
    needs: build-production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        
    - name: Deploy to production
      run: |
        aws eks update-kubeconfig --region us-east-1 --name corporate-secondary
        
        # Update deployment with current image tag
        SHORT_SHA=$(git rev-parse --short HEAD)
        sed -i.bak "s|image:.*|image: 398803372580.dkr.ecr.ap-south-1.amazonaws.com/ecoligovenkat:$SHORT_SHA|" kubernetes/manifests/deployment.yaml
        
        kubectl apply -f kubernetes/manifests/ -n ecoligo-production
        
        # Restore original file
        mv kubernetes/manifests/deployment.yaml.bak kubernetes/manifests/deployment.yaml
        
    - name: Verify deployment
      run: |
        kubectl rollout status deployment/ecoligo-app -n ecoligo-production --timeout=300s
        echo "✅ Production deployment successful"
