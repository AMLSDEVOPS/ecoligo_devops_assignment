# CD Pipeline - Build and deploy to production
# Only runs when code is pushed to main branch

name: CD - Production Deployment

on:
  push:
    branches: [main]

env:
  EKS_CLUSTER: corporate-secondary
  ECR_REGISTRY: 398803372580.dkr.ecr.ap-south-1.amazonaws.com
  ECR_REPO: ecoligovenkat
  NAMESPACE: ecoligo-production

jobs:
  build-and-push:
    name: Build and Push Container
    runs-on: self-hosted
    
    steps:
    - name: Get the code
      uses: actions/checkout@v4
      
    - name: Setup AWS credentials for ECR
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1
        
    - name: Login to ECR registry
      run: |
        aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin $ECR_REGISTRY
        
    - name: Build and push container image
      run: |
        SHORT_SHA=$(git rev-parse --short HEAD)
        echo "Building image with tag: $SHORT_SHA"
        
        docker build -t $ECR_REGISTRY/$ECR_REPO:$SHORT_SHA .
        docker push $ECR_REGISTRY/$ECR_REPO:$SHORT_SHA
        
        echo "Successfully pushed image: $ECR_REGISTRY/$ECR_REPO:$SHORT_SHA"

  deploy-to-production:
    name: Deploy to Production
    runs-on: self-hosted
    needs: build-and-push
    
    steps:
    - name: Get the code
      uses: actions/checkout@v4
      
    - name: Setup AWS for EKS cluster
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        
    - name: Connect to EKS cluster
      run: |
        aws eks update-kubeconfig --region us-east-1 --name $EKS_CLUSTER
        
    - name: Deploy new version
      run: |
        SHORT_SHA=$(git rev-parse --short HEAD)
        echo "Deploying version $SHORT_SHA to production..."
        
        # Update the deployment with new image
        kubectl set image deployment/ecoligo-app ecoligo-app=$ECR_REGISTRY/$ECR_REPO:$SHORT_SHA -n $NAMESPACE
        
    - name: Wait for deployment to complete
      run: |
        echo "Waiting for rollout to finish..."
        kubectl rollout status deployment/ecoligo-app -n $NAMESPACE --timeout=300s
        
    - name: Verify deployment
      run: |
        echo "Deployment status:"
        kubectl get deployments -n $NAMESPACE
        echo ""
        echo "Pods:"
        kubectl get pods -n $NAMESPACE
        echo "Deployment completed successfully"
