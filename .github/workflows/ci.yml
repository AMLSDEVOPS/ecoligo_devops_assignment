name: CI Pipeline - Build and Test

on:
  pull_request:
    branches: [ main, dev ]
  push:
    branches: [ main, dev ]

jobs:
  validate-and-test:
    name: Validate Code and Run Tests
    runs-on: self-hosted
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
        
    - name: Install Python dependencies
      run: |
        # Use pip to install dependencies directly
        pip install -r requirements.txt
        
    - name: Run unit tests
      run: |
        # Use pytest directly
        pytest tests/ -v --cov=app --cov-report=term-missing
        
    - name: Validate application structure
      run: |
        python -c "import app; print('✅ Application imports work')"
        python -c "from app.main import app; print('✅ FastAPI app initializes')"
        python -c "from app.api import api; print('✅ API module loads correctly')"
        
    - name: Build Docker image
      run: |
        # Use podman instead of docker if available, or use system docker
        if command -v docker &> /dev/null; then
          docker build -t ecoligo-app:$GITHUB_SHA .
          docker build -t ecoligo-app:latest .
        else
          echo "Docker not available, skipping Docker build"
          exit 0
        fi
        
    - name: Test Docker container functionality
      run: |
        if command -v docker &> /dev/null; then
          docker run --rm ecoligo-app:$GITHUB_SHA python -c "import app; print('✅ Container imports work')"
        else
          echo "Docker not available, skipping container test"
        fi
        
    - name: Test cronjob script
      run: |
        # Test the cronjob script can run
        cd scripts && python hourly_cronjob.py && echo "✅ Cronjob script executed successfully"
